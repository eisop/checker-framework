# Create a Docker image that is ready to run the full Checker Framework tests,
# including building the manual and Javadoc, using OpenJDK 20.
# To convert this file to use a newer JDK, search (from the top level of the
# Checker Framework and Annotation Tools repositories) for: (java|jdk).?20

# "ubuntu" is the latest LTS release.  "ubuntu:rolling" is the latest release.
# See releases at https://hub.docker.com/_/ubuntu for available images.
# See https://packages.ubuntu.com/search?suite=default&section=all&arch=any&keywords=openjdk-20-jdk&searchon=names
# to see what Ubuntu versions support a particular OpenJDK version.
FROM ubuntu:22.10
MAINTAINER Werner Dietl <wdietl@gmail.com>

# According to
# https://docs.docker.com/engine/userguide/eng-image/dockerfile_best-practices/:
#  * Put "apt-get update" and "apt-get install" and "apt cleanup" in the same RUN command.
#  * Do not run "apt-get upgrade"; instead get upstream to update.

# ca-certificates-java is a dependency of openjdk-20-jdk, but the installation
# process seems to fail sometimes when only openjdk-20-jdk is specified.
RUN export DEBIAN_FRONTEND=noninteractive \
&& apt-get -qqy update \
&& apt-get -qqy install \
  ca-certificates-java \
&& apt-get -qqy install \
  openjdk-20-jdk

RUN export DEBIAN_FRONTEND=noninteractive \
&& apt-get -qqy update \
&& apt-get -qqy install \
  ant \
  binutils \
  build-essential \
  cpp \
  git \
  gradle \
  jq \
  libcurl3-gnutls \
  make \
  maven \
  mercurial \
  python3-pip \
  python3-requests \
  unzip \
  wget

# Maven 3.6.3 (the default on Ubuntu 22.10) does not run under JDK 20.
# (Don't try to use a variable here for the Maven version.)
RUN export DEBIAN_FRONTEND=noninteractive \
&& wget https://mirrors.sonic.net/apache/maven/maven-3/3.9.1/binaries/apache-maven-3.9.1-bin.tar.gz \
&& tar xzvf apache-maven-3.9.1-bin.tar.gz
ENV PATH="/apache-maven-3.9.1/bin:$PATH"

RUN export DEBIAN_FRONTEND=noninteractive \
&& apt-get -qqy update \
&& apt-get -qqy install \
  autoconf \
  devscripts \
  dia \
  hevea \
  imagemagick \
  junit \
  latexmk \
  librsvg2-bin \
  libasound2-dev libcups2-dev libfontconfig1-dev \
  libx11-dev libxext-dev libxrender-dev libxrandr-dev libxtst-dev libxt-dev \
  pdf2svg \
  rsync \
  shellcheck \
  texlive-font-utils \
  texlive-fonts-recommended \
  texlive-latex-base \
  texlive-latex-extra \
  texlive-latex-recommended

RUN pip3 install --no-cache-dir black flake8 html5validator lithium-reducer PyGithub pyyaml

RUN export DEBIAN_FRONTEND=noninteractive \
&& apt-get clean \
&& rm -rf /var/lib/apt/lists/*
