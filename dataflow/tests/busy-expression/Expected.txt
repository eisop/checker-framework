2 -> 3 EACH_TO_EACH
3 -> 4 EACH_TO_EACH
4 -> 8 THEN_TO_BOTH
4 -> 10 ELSE_TO_BOTH
8 -> 11 EACH_TO_EACH
10 -> 11 EACH_TO_EACH
11 -> 12 EACH_TO_EACH
12 -> 13 EACH_TO_EACH
12 -> 15 ArithmeticException
13 -> 17 EACH_TO_EACH
15 -> 17 EACH_TO_EACH
17 -> 0 EACH_TO_EACH

2:
Process order: 1
AnalysisResult#1
Before:   busy expressions = none
~~~~~~~~~
<entry>

3:
Process order: 2
AnalysisResult#3
Before:   busy expressions = none
~~~~~~~~~
a   [ VariableDeclaration ]
2   [ IntegerLiteral ]
a = 2   [ Assignment ]
b   [ VariableDeclaration ]
3   [ IntegerLiteral ]
b = 3   [ Assignment ]
x   [ VariableDeclaration ]
y   [ VariableDeclaration ]
a   [ LocalVariable ]
b   [ LocalVariable ]
(a != b)   [ NotEqual ]
~~~~~~~~~
TransferInput#65
After:   busy expressions = (b >> a)

4:
Process order: 3
AnalysisResult#5
Before:   busy expressions = (b >> a)
~~~~~~~~~
ConditionalBlock: then: 8, else: 10

8:
Process order: 4
AnalysisResult#7
Before:   busy expressions = (b >> a), (a - b)
~~~~~~~~~
x   [ LocalVariable ]
b   [ LocalVariable ]
a   [ LocalVariable ]
(b >> a)   [ SignedRightShift ]
x = (b >> a)   [ Assignment ]
expression statement x = b >> a   [ ExpressionStatement ]
y   [ LocalVariable ]
a   [ LocalVariable ]
b   [ LocalVariable ]
(a - b)   [ NumericalSubtraction ]
y = (a - b)   [ Assignment ]
expression statement y = a - b   [ ExpressionStatement ]
~~~~~~~~~
TransferInput#32
After:   busy expressions = none

10:
Process order: 5
AnalysisResult#9
Before:   busy expressions = (b >> a)
~~~~~~~~~
y   [ LocalVariable ]
b   [ LocalVariable ]
a   [ LocalVariable ]
(b >> a)   [ SignedRightShift ]
y = (b >> a)   [ Assignment ]
expression statement y = b >> a   [ ExpressionStatement ]
a   [ LocalVariable ]
0   [ IntegerLiteral ]
a = 0   [ Assignment ]
expression statement a = 0   [ ExpressionStatement ]
x   [ LocalVariable ]
a   [ LocalVariable ]
b   [ LocalVariable ]
(a - b)   [ NumericalSubtraction ]
x = (a - b)   [ Assignment ]
expression statement x = a - b   [ ExpressionStatement ]
~~~~~~~~~
TransferInput#31
After:   busy expressions = none

11:
Process order: 6
AnalysisResult#11
Before:   busy expressions = none
~~~~~~~~~
d   [ VariableDeclaration ]
marker (start of try statement #0)   [ Marker ]
marker (start of try block #0)   [ Marker ]
d   [ LocalVariable ]
y   [ LocalVariable ]
x   [ LocalVariable ]
~~~~~~~~~
TransferInput#23
After:   busy expressions = none

12:
Process order: 7
AnalysisResult#13
Before:   busy expressions = (y / x)
~~~~~~~~~
(y / x)   [ IntegerDivision ]
~~~~~~~~~
TransferInput#21
After:   busy expressions = (y / x)

13:
Process order: 8
AnalysisResult#15
Before:   busy expressions = (y / x)
~~~~~~~~~
(y / x)   [ IntegerDivision ]
d = (y / x)   [ Assignment ]
expression statement d = y / x   [ ExpressionStatement ]
marker (end of try block #0)   [ Marker ]
~~~~~~~~~
TransferInput#5
After:   busy expressions = none

15:
Process order: 9
AnalysisResult#17
Before:   busy expressions = none
~~~~~~~~~
marker (start of catch block for ArithmeticException #0)   [ Marker ]
e   [ VariableDeclaration ]
d   [ LocalVariable ]
10000000   [ IntegerLiteral ]
d = 10000000   [ Assignment ]
expression statement d = 10000000   [ ExpressionStatement ]
marker (end of catch block for ArithmeticException #0)   [ Marker ]
~~~~~~~~~
TransferInput#6
After:   busy expressions = none

17:
Process order: 10
AnalysisResult#19
Before:   busy expressions = none
~~~~~~~~~
d   [ LocalVariable ]
return d   [ Return ]
~~~~~~~~~
TransferInput#1
After:   busy expressions = none

0:
Process order: 11
AnalysisResult#21
Before:   busy expressions = none
~~~~~~~~~
<exit>
