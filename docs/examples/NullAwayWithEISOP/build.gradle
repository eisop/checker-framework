// ///////////////////////////////////////////////////////////////////////////
// Checker Framework nullness-checking and Error Prone NullAway example
//

plugins {
    id 'java'
    id 'net.ltgt.errorprone' version '4.1.0'
    // Checker Framework nullness checking
    id 'org.checkerframework' version '0.6.52' apply false
}

ext {
    versions = [
        eisopVersion: '3.42.0-eisop5',
    ]
}

apply plugin: 'org.checkerframework'
if (false) {
    def cfHome = "${projectDir}/../../.."
    dependencies {
        compileOnly files(cfHome + '/checker/dist/checker-qual.jar')
        testCompileOnly files(cfHome + '/checker/dist/checker-qual.jar')
        checkerFramework files(cfHome + '/checker/dist/checker.jar')
    }
} else {
    dependencies {
        compileOnly "io.github.eisop:checker-qual:${versions.eisopVersion}"
        testCompileOnly "io.github.eisop:checker-qual:${versions.eisopVersion}"
        checkerFramework "io.github.eisop:checker-qual:${versions.eisopVersion}"
        checkerFramework "io.github.eisop:checker:${versions.eisopVersion}"
    }
}

dependencies {
    // Must use at least version 2.4.0 of Error Prone.
    if (JavaVersion.current() == JavaVersion.VERSION_1_8) {
        errorprone 'com.google.errorprone:error_prone_core:2.10.0'
    } else if (JavaVersion.current() < JavaVersion.VERSION_17) {
        errorprone 'com.google.errorprone:error_prone_core:2.31.0'
    } else {
        errorprone 'com.google.errorprone:error_prone_core:2.36.0'
    }
    errorprone 'com.uber.nullaway:nullaway:0.12.3'
}

repositories {
    mavenCentral()
}

checkerFramework {
    checkers = [
        'org.checkerframework.checker.nullness.NullnessChecker',
    ]
    extraJavacArgs = ['-Aversion']
}

tasks.withType(JavaCompile).configureEach {
    options.errorprone {
        enable("NullAway")
        option("NullAway:CustomContractAnnotations", "org.springframework.lang.Contract")
        option("NullAway:JSpecifyMode", "true")
        option("NullAway:AnnotatedPackages", "com.example")
    }
}

compileJava {
    // Error Prone's checkers are only executed if no warnings are reported.
    // Therefore, we downgrade the NullAway violations to warnings so that both
    // Error Prone (with NullAway) and the Checker Framework nullness checker can run.
    options.errorprone.warn("NullAway")
}
